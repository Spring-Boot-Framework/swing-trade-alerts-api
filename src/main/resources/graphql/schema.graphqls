schema {
    query : Query
    mutation: Mutation
}

type User {
    id: String!
    name: String!
    authProvider: String
    watchList: [Stock]
    fcmToken: String
    countryCode: String
    timeZone: String
    ipAddress: String
    createdDate: String
    modifiedDate: String
}

type Stock {
    id: String!
    symbol: String!
    company: String
    price: Float
    changePercent: Float
    marketCap: Float
    peRatio: Float
    week52High: Float
    week52Low: Float
    ytdChangePercent: Float
    modifiedDate: String
}

type Response {
    success: Boolean
    message: String
}

type Query {
    getWatchList(id: String!):[Stock]
    searchStocks(searchTerm: String): [Stock]
}

type Mutation {
    addStock(symbol: String):Response
}